from sklearn.datasets import load_iris
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
import numpy as np

dataset = load_iris()
X_train, X_test, y_train, y_test = train_test_split(dataset["data"], dataset["target"], random_state=0)

kn = KNeighborsClassifier(n_neighbors=1)
kn.fit(X_train, y_train)

print("\n{:^10} {:^20} {:^20}".format("Index", "Actual Class", "Predicted Class"))
print("-" * 50)

for i in range(len(X_test)):
    x = X_test[i]
    x_new = np.array([x])
    prediction = kn.predict(x_new)
    actual_label = dataset["target_names"][y_test[i]]
    predicted_label = dataset["target_names"][prediction[0]]
    print("{:^10} {:^20} {:^20}".format(i, actual_label, predicted_label))

accuracy = kn.score(X_test, y_test)
print("\nModel Accuracy:", round(accuracy * 100, 2), "%")
